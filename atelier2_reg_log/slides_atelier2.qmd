---
title: "Atelier 2 ‚Äî R√©gression logistique"
format:
  revealjs:
    toc: false
include-after-body: ../utils/return-site.html
---

```{r echo=FALSE}
source("../utils/requirements.R")
library(titanic); library(dplyr); library(ggplot2); library(broom); library(pROC); library(scales)
theme_set(ggplot2::theme_minimal())
data("titanic_train")
df <- titanic_train %>%
  janitor::clean_names() %>%
  mutate(survived = factor(survived, levels=c(0,1), labels=c("No","Yes")),
         sex = factor(sex), pclass = factor(pclass), embarked=factor(embarked))
```

# Plan 

- Brise-glace ‚Äî *Pourquoi une proba et pas une droite ?*
- **Th√©orie** ‚Äî logit/odds, estimation, interpr√©tation, diagnostics de base
- üöÄ **Mission 1** ‚Äî Mod√®le logistique sur Titanic
- **√âvaluation** ‚Äî confusion, sens/spec, ROC/AUC, calibration, seuils & co√ªts
- üöÄ **Mission 2** ‚Äî ROC, AUC & choix de seuil
- **Compl√©ments** ‚Äî interactions, non-lin√©arit√©s, s√©paration, r√©gularisation (aper√ßu)
- D√©brief & pi√®ges fr√©quents

---

## Brise-glace 

::: {.columns}
::: {.column width="50%"}
```{r}
ggplot(df, aes(sex, fill=survived)) + geom_bar(position="fill") + labs(y="Proportion", title="Survie par sexe")
```
:::
::: {.column width="50%"}
```{r}
ggplot(df, aes(pclass, fill=survived)) + geom_bar(position="fill") + labs(y="Proportion", title="Survie par classe")
```
:::
:::


- Discussion : Pourquoi **une probabilit√© born√©e** entre 0 et 1 ? Pourquoi pas une droite comme en r√©gression lin√©aire ?

---

## Logistique : de la probabilit√© aux log-odds

- Probabilit√© $p \in (0,1)$
- **Odds** $= \dfrac{p}{1-p}$ (rapport de chances)
- **Logit** $= \log\dfrac{p}{1-p}$ (fonction *croissante*)

$$
{\log\frac{p}{1-p}}= \beta_0 + \beta_1 x_1 + \cdots + \beta_p x_p
$$

- Interpr√©tation : $\exp(\beta_j)$ = **odds ratio** (OR) pour $x_j$ (+1 unit√© ou changement de niveau).

---

## Estimation & sortie R

- Fonction : `glm(y ~ x, family=binomial, data=...)`
- `summary()` fournit les coefficients (log-odds)
- `broom::tidy(..., exponentiate=TRUE)` donne les **OR** et **IC**

```{r}
m <- glm(survived ~ sex + pclass + age + fare, data=df %>% tidyr::drop_na(), family=binomial())
broom::tidy(m, exponentiate=TRUE, conf.int=TRUE) %>%
  dplyr::mutate(across(c(estimate, conf.low, conf.high), round, 3))
```

::: {.callout-note}
**R√©flexion :**
- Que signifie un OR sup√©rieur √† 1 ? inf√©rieur √† 1 ?
- Pourquoi pr√©senter des OR plut√¥t que des coefficients bruts ?
:::

---

## Diagnostics (base)

- R√©sidus d√©viance/pearson (id√©e g√©n√©rale)
- Points influents (Cook)
- Probl√®me de **s√©paration quasi-parfaite**
- Multicolin√©arit√© : m√™mes r√©flexes que pour la r√©gression lin√©aire

```{r}
par(mfrow=c(2,2)); plot(m); par(mfrow=c(1,1))
plot(cooks.distance(m), type="h"); abline(h=4/nrow(df), lty=2)
```

---

## üöÄ Transition ‚Äî Mission 1
**Objectifs p√©dagogiques :**  
- Construire un premier mod√®le logistique sur Titanic  
- Lire et interpr√©ter des **odds ratios**  
- Tester un **seuil simple (0.5)** et discuter ses limites  

üëâ Ouvrir `missions/M1_titanic.qmd`

---

## De la probabilit√© √† la d√©cision : **seuil**

- Pr√©dire $\hat p$ ne suffit pas ‚áí il faut un **seuil** pour d√©cider (Yes/No)
- **Seuil 0.5** : simple mais rarement optimal

```{r}
df_fit <- df %>% tidyr::drop_na()

prob <- predict(m, newdata = df_fit, type = "response")
pred <- factor(ifelse(prob >= 0.5, "Yes", "No"), levels = c("No","Yes"))

table(Truth = df_fit$survived, Pred = pred)
```

::: {.callout-note}
**R√©flexion :**  
- Que se passe-t-il si l‚Äôon prend un seuil tr√®s bas (0.1) ? Tr√®s haut (0.9) ?  
- Quels types d‚Äôerreurs (FP/FN) cela favorise-t-il ?
:::

---

## Mesures de performance

- **Accuracy** = proportion bien class√©e  
- **Sensibilit√©** = rappel des *Yes* (TPR)  
- **Sp√©cificit√©** = proportion de vrais *No* (TNR)  
- **ROC** = performance sur tous les seuils possibles  
- **AUC** = capacit√© de discrimination (0.5 = hasard, 1 = parfait)  
- **Calibration** = probas bien calibr√©es (observ√© ‚âà pr√©dit)

---

## üöÄ Transition ‚Äî Mission 2
**Objectifs p√©dagogiques :**  
- Tracer une **courbe ROC** et calculer l‚Äô**AUC**  
- Choisir un **seuil adapt√© au contexte** (co√ªts FP/FN)  
- Explorer la **calibration** du mod√®le  

üëâ Ouvrir `missions/M2_roc_seuils.qmd`

---

## ROC & AUC ‚Äî rappels utiles

- **ROC** : TPR (sensibilit√©) vs FPR (1-sp√©cificit√©)  
- **AUC** : probabilit√© qu‚Äôun positif ait un score > qu‚Äôun n√©gatif choisi au hasard  
- AUC **ne d√©pend pas** d‚Äôun seuil particulier  

---

## Choix de seuil **contextuel**

- Le choix du seuil d√©pend :  
  - **Pr√©valence** (taux de positifs)  
  - **Co√ªts** FP/FN  
- Exemples :  
  - Diagnostic m√©dical : **FN co√ªteux** ‚áí seuil bas (maximiser sensibilit√©)  
  - D√©tection fraude : **FP co√ªteux** ‚áí seuil haut (maximiser sp√©cificit√©)  

---

## Calibration ‚Äî intuition

- D√©couper les probas pr√©dites en **d√©ciles**  
- Comparer **moyenne pr√©dite** vs **taux observ√©**  
- Points au-dessus de la diagonale ‚áí **sur-estimation**  
- Points en dessous ‚áí **sous-estimation**  

---

## Compl√©ments (aper√ßu)

- **Interactions** et **non-lin√©arit√©s** (splines, polyn√¥mes)  
- **D√©s√©quilibre des classes** : utiliser courbe **PR** (precision-recall)  
- **S√©paration parfaite** : coefficients infinis, solution = r√©gularisation (ridge/lasso)  

---

## D√©brief & pi√®ges fr√©quents 

- Confondre **odds** et **probabilit√©**  
- Utiliser par d√©faut un seuil de 0.5  
- Juger un mod√®le uniquement par l‚Äô**accuracy**  
- Oublier d‚Äôint√©grer le **contexte** (co√ªts, domaine)  
